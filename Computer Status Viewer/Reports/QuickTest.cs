using System;
using System.IO;
using Computer_Status_Viewer.Models;

namespace Computer_Status_Viewer.Reports
{
    /// <summary>
    /// –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –æ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    /// </summary>
    public class QuickTest
    {
        public static void RunTest()
        {
            Console.WriteLine("=== –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –≠–ö–°–ü–û–†–¢–ê ===");
            Console.WriteLine();
            
            try
            {
                // –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á—ë—Ç
                var testReport = new Report
                {
                    Id = 1,
                    Title = "–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á—ë—Ç —Å–∏—Å—Ç–µ–º—ã",
                    Description = "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –æ—Ç—á—ë—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞",
                    Status = "–ó–∞–≤–µ—Ä—à—ë–Ω",
                    CreatedDate = DateTime.Now,
                    IsAutomatic = true,
                    ReportType = new ReportType
                    {
                        Name = "–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                        Category = "–°–∏—Å—Ç–µ–º–∞"
                    }
                };
                
                Console.WriteLine("‚úì –¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á—ë—Ç —Å–æ–∑–¥–∞–Ω");
                
                // –°–æ–∑–¥–∞—ë–º —ç–∫—Å–ø–æ—Ä—Ç—ë—Ä (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ ReportManager)
                var exporter = new ReportExporter(null);
                
                // –¢–µ—Å—Ç–∏—Ä—É–µ–º TXT —ç–∫—Å–ø–æ—Ä—Ç
                var txtPath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), "test_report.txt");
                Console.WriteLine($"–°–æ–∑–¥–∞–Ω–∏–µ TXT —Ñ–∞–π–ª–∞: {txtPath}");
                
                // –°–æ–∑–¥–∞—ë–º –ø—Ä–æ—Å—Ç—É—é –≤–µ—Ä—Å–∏—é —ç–∫—Å–ø–æ—Ä—Ç–∞ –±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                CreateSimpleTxtExport(testReport, txtPath);
                
                Console.WriteLine("‚úì TXT —ç–∫—Å–ø–æ—Ä—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω!");
                Console.WriteLine($"–§–∞–π–ª —Å–æ–∑–¥–∞–Ω: {txtPath}");
                
                // –¢–µ—Å—Ç–∏—Ä—É–µ–º HTML —ç–∫—Å–ø–æ—Ä—Ç
                var htmlPath = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), "test_report.html");
                Console.WriteLine($"–°–æ–∑–¥–∞–Ω–∏–µ HTML —Ñ–∞–π–ª–∞: {htmlPath}");
                
                CreateSimpleHtmlExport(testReport, htmlPath);
                
                Console.WriteLine("‚úì HTML —ç–∫—Å–ø–æ—Ä—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω!");
                Console.WriteLine($"HTML —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {htmlPath}");
                
                Console.WriteLine();
                Console.WriteLine("=== –¢–ï–°–¢ –ó–ê–í–ï–†–®–Å–ù –£–°–ü–ï–®–ù–û ===");
                Console.WriteLine("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ:");
                Console.WriteLine($"- {Path.GetFileName(txtPath)}");
                Console.WriteLine($"- {Path.GetFileName(htmlPath)}");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"‚ùå –û—à–∏–±–∫–∞: {ex.Message}");
            }
        }
        
        private static void CreateSimpleTxtExport(Report report, string filePath)
        {
            var content = new System.Text.StringBuilder();
            
            // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—á—ë—Ç–∞
            content.AppendLine("=".PadRight(80, '='));
            content.AppendLine($"–û–¢–ß–Å–¢: {report.Title.ToUpper()}");
            content.AppendLine("=".PadRight(80, '='));
            content.AppendLine();
            
            // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            content.AppendLine("–û–°–ù–û–í–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:");
            content.AppendLine("-".PadRight(40, '-'));
            content.AppendLine($"–¢–∏–ø –æ—Ç—á—ë—Ç–∞:     {report.ReportType?.Name ?? "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}");
            content.AppendLine($"–ö–∞—Ç–µ–≥–æ—Ä–∏—è:      {report.ReportType?.Category ?? "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}");
            content.AppendLine($"–°—Ç–∞—Ç—É—Å:         {report.Status}");
            content.AppendLine($"–¢–∏–ø:            {(report.IsAutomatic ? "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π" : "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π")}");
            content.AppendLine($"–°–æ–∑–¥–∞–Ω:         {report.CreatedDate:dd.MM.yyyy HH:mm:ss}");
            content.AppendLine($"–û–ø–∏—Å–∞–Ω–∏–µ:       {report.Description}");
            content.AppendLine();
            
            // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            content.AppendLine("–î–ê–ù–ù–´–ï –û–¢–ß–Å–¢–ê:");
            content.AppendLine("=".PadRight(80, '='));
            content.AppendLine();
            content.AppendLine("üìÅ –°–ò–°–¢–ï–ú–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø");
            content.AppendLine("-".PadRight(60, '-'));
            content.AppendLine("  ‚Ä¢ –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: Intel Core i7-8700K");
            content.AppendLine("    –¢–∏–ø: String");
            content.AppendLine("    –í—Ä–µ–º—è: 14:30:25");
            content.AppendLine();
            content.AppendLine("  ‚Ä¢ –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å: 16 GB");
            content.AppendLine("    –¢–∏–ø: String");
            content.AppendLine("    –í—Ä–µ–º—è: 14:30:25");
            content.AppendLine();
            
            // –ü–æ–¥–≤–∞–ª
            content.AppendLine("=".PadRight(80, '='));
            content.AppendLine($"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: {DateTime.Now:dd.MM.yyyy HH:mm:ss}");
            content.AppendLine("SystemGuard-X v1.0");
            content.AppendLine("=".PadRight(80, '='));
            
            File.WriteAllText(filePath, content.ToString(), System.Text.Encoding.UTF8);
        }
        
        private static void CreateSimpleHtmlExport(Report report, string filePath)
        {
            var htmlContent = new System.Text.StringBuilder();
            
            htmlContent.AppendLine("<!DOCTYPE html>");
            htmlContent.AppendLine("<html lang='ru'>");
            htmlContent.AppendLine("<head>");
            htmlContent.AppendLine("    <meta charset='UTF-8'>");
            htmlContent.AppendLine("    <title>–û—Ç—á—ë—Ç: " + report.Title + "</title>");
            htmlContent.AppendLine("    <style>");
            htmlContent.AppendLine("        body { font-family: Arial, sans-serif; margin: 20px; background-color: #f5f5f5; }");
            htmlContent.AppendLine("        .container { background-color: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }");
            htmlContent.AppendLine("        .header { text-align: center; color: #2c3e50; border-bottom: 3px solid #3498db; padding-bottom: 20px; margin-bottom: 30px; }");
            htmlContent.AppendLine("        .title { font-size: 24px; font-weight: bold; margin-bottom: 10px; }");
            htmlContent.AppendLine("        .info-section { margin-bottom: 30px; }");
            htmlContent.AppendLine("        .info-title { font-size: 18px; font-weight: bold; color: #34495e; margin-bottom: 15px; border-left: 4px solid #3498db; padding-left: 10px; }");
            htmlContent.AppendLine("        .info-table { width: 100%; border-collapse: collapse; margin-bottom: 20px; }");
            htmlContent.AppendLine("        .info-table td { padding: 8px 12px; border-bottom: 1px solid #ecf0f1; }");
            htmlContent.AppendLine("        .info-table td:first-child { font-weight: bold; color: #2c3e50; width: 200px; }");
            htmlContent.AppendLine("        .footer { text-align: center; margin-top: 40px; padding-top: 20px; border-top: 2px solid #ecf0f1; color: #7f8c8d; font-size: 12px; }");
            htmlContent.AppendLine("    </style>");
            htmlContent.AppendLine("</head>");
            htmlContent.AppendLine("<body>");
            htmlContent.AppendLine("    <div class='container'>");
            htmlContent.AppendLine("        <div class='header'>");
            htmlContent.AppendLine("            <div class='title'>–û–¢–ß–Å–¢: " + report.Title.ToUpper() + "</div>");
            htmlContent.AppendLine("        </div>");
            htmlContent.AppendLine("        <div class='info-section'>");
            htmlContent.AppendLine("            <div class='info-title'>üìã –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</div>");
            htmlContent.AppendLine("            <table class='info-table'>");
            htmlContent.AppendLine("                <tr><td>–¢–∏–ø –æ—Ç—á—ë—Ç–∞:</td><td>" + (report.ReportType?.Name ?? "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ") + "</td></tr>");
            htmlContent.AppendLine("                <tr><td>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</td><td>" + (report.ReportType?.Category ?? "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ") + "</td></tr>");
            htmlContent.AppendLine("                <tr><td>–°—Ç–∞—Ç—É—Å:</td><td>" + report.Status + "</td></tr>");
            htmlContent.AppendLine("                <tr><td>–¢–∏–ø:</td><td>" + (report.IsAutomatic ? "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π" : "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π") + "</td></tr>");
            htmlContent.AppendLine("                <tr><td>–°–æ–∑–¥–∞–Ω:</td><td>" + report.CreatedDate.ToString("dd.MM.yyyy HH:mm:ss") + "</td></tr>");
            htmlContent.AppendLine("                <tr><td>–û–ø–∏—Å–∞–Ω–∏–µ:</td><td>" + report.Description + "</td></tr>");
            htmlContent.AppendLine("            </table>");
            htmlContent.AppendLine("        </div>");
            htmlContent.AppendLine("        <div class='footer'>");
            htmlContent.AppendLine("            <div>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: " + DateTime.Now.ToString("dd.MM.yyyy HH:mm:ss") + " | SystemGuard-X v1.0</div>");
            htmlContent.AppendLine("        </div>");
            htmlContent.AppendLine("    </div>");
            htmlContent.AppendLine("</body>");
            htmlContent.AppendLine("</html>");
            
            File.WriteAllText(filePath, htmlContent.ToString(), System.Text.Encoding.UTF8);
        }
    }
}
